dnl Process this file with autoconf to produce a configure script.
dnl (c) Andreas Barth <aba@muenchen.pro-bahn.de> 1999
dnl gehört zum Packet unix-connect
dnl und unterliegt der GPL (siehe COPYING)

AC_INIT(mail-and-news)
dnl AC_CONFIG_HEADER(include/config.h)
dnl AC_DEFINE_UNQUOTED(CONFIG_FILE,$sysconfdir)
dnl      checks for programs
dnl      checks for libraries
dnl      checks for header files
dnl      checks for typedefs
dnl      checks for structures
dnl      checks for compiler characteristics
dnl      checks for library functions
dnl      checks for system services


AC_MSG_CHECKING(Path)
AC_ARG_WITH(path,
[ --with-path=path         Path innerhalb von UC (Default=PATH).],
[path=$withval],[path=$PATH])
AC_MSG_RESULT($path)
AC_SUBST(path)

AC_MSG_CHECKING(Unterverzeichnis für die Dateien)
AC_ARG_WITH(dir,
[ --with-dir=dir           In welches Unterverzeichnis die Dateien kommen.],
[ ZCDIR="$withval"
if test x"$ZCDIR" != x; then
	ZC="/$ZCDIR";
fi
],[
ZCDIR=zconnect
if test x"$ZCDIR" != x; then
	ZC="/$ZCDIR";
fi
]
)
AC_MSG_RESULT($ZCDIR)
AC_SUBST(ZC)


AC_MSG_CHECKING(Unterverzeichnis für die Programme)
AC_ARG_WITH(execdir,
[ --with-execdir=dir       In welches Verzeichnis die Programme kommen.],
[ BINDIR="$withval"
],[
       BINDIR="$libexecdir$ZC"
])
AC_MSG_RESULT($BINDIR)
AC_SUBST(BINDIR)

AC_MSG_CHECKING(Unterverzeichnis für die Konfiguration)
AC_ARG_WITH(confdir,
[ --with-confdir=dir       In welches Verzeichnis die Konfiguration kommt.],
[ ETCDIR="$withval"
],[
       ETCDIR="$sysconfdir$ZC"
])
AC_MSG_RESULT($ETCDIR)
AC_SUBST(ETCDIR)


AC_MSG_CHECKING(spooldir)
AC_ARG_WITH(spooldir,
[ --with-spooldir=dir      Spooldir.],
[ SPOOLDIR="$withval" ],[
if test -d /var/spool; then
	SPOOLDIR=/var/spool/zconnect
else
	SPOOLDIR=/usr/spool/zconnect
fi
]
)
AC_MSG_RESULT($SPOOLDIR)
AC_SUBST(SPOOLDIR)


AC_ARG_WITH(user,
[ --with-user=user         Userkennung für Unix-Connect.],[
if test $withval = no ; then
	echo "Es muß eine Benutzerkennung gewählt werden"
	exit 1;
else
	USER=$withval;
fi],
[	echo "Es muß eine Benutzerkennung gewählt werden"
	exit 1]
)
AC_SUBST(USER)

AC_ARG_WITH(group,
[ --with-group=group       Gruppenkennung für Unix-Connect.],[
if test $withval = no ; then
	echo "Es muß eine Gruppe gewählt werden"
	exit 1;
else
	GROUP=$withval;
fi],
[	echo "Es muß eine Gruppe gewählt werden"
	exit 1]
)
AC_SUBST(GROUP)

AC_MSG_CHECKING(Welcher Typ ist das Gateway)
AC_ARG_WITH(box,
[ --with-box=typ           point, gate, server
                          Point: Unix-Connect ist Enduser-System
                          Gate:  Kein Teil des Z-Netzes
                          Box:   Alle ist möglich (default).],
[ case "$withval" in
  box)
        AC_MSG_RESULT(Box)
        INSTTYPE="box"
        ;;
  point)
        AC_MSG_RESULT(Point)
        INSTTYPE="point"
        ;;
  gate)
        AC_MSG_RESULT(Gate)
        INSTTYPE="gate"
        ;;
  *)
        AC_MSG_RESULT(Fehler!)
	exit 1
        ;;
  esac ],[
  AC_MSG_RESULT(box)
  INSTTYPE="box"]
)
AC_SUBST(INSTTYPE)



AC_MSG_CHECKING(Nachrichten zurückkonvertieren)
AC_ARG_ENABLE(real-gate,
[ --disable-real-gate      Nachrichten zurückkonvertieren erlauben.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
	AC_DEFINE(REAL_GATE)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)

dnl Mail- und Newssystem
dnl in den zweiten Teil sollen mal Heuristiken eingebaut werden
AC_MSG_CHECKING(Mailsystem)
AC_ARG_ENABLE(mail,
[ --with-mail=typ          Welches Mailsystem wird verwendet?],
[ MAIL=$enableval ], [MAIL='no'])
AC_MSG_RESULT($MAIL)
AC_SUBST(MAIL)

AC_MSG_CHECKING(Mailsystem)
AC_ARG_ENABLE(news,
[ --with-news=typ          Welches Newssystem wird verwendet?],
[ NEWS=$enableval ], [NEWS='no'])
AC_MSG_RESULT($NEWS)
AC_SUBST(NEWS)


AC_MSG_CHECKING(APC einkompilieren)
AC_ARG_ENABLE(apc,
[ --with-apc               APC einkompilieren (meist unnötig).],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
	AC_DEFINE(APC_A2B)
	APCOBJS="apc_a2b.o atob.o"
        ;;
  *)
        AC_MSG_RESULT(Nein)
	APCOBJS=""
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
  APCOBJS=""
])
AC_SUBST(APCOBJS)


AC_MSG_CHECKING(Bang-Pfade)
AC_ARG_ENABLE(bang,
[ --enable-bang            Bang-Pfade verwenden.],
[ case "$enableval" in
  yes)
	AC_MSG_RESULT(Ja)
	AC_DEFINE(RCPT_WITH_BANG)
        ;;
  *)
	AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])
AC_SUBST(BANG)


dnl AC_MSG_CHECKING(Filserver)
dnl AC_ARG_WITH(fileserver,
dnl [ --with-fileserver=dir      Fileserverdir.],
dnl [
dnl Wenn Sie einen anonymous-FTP Server betreiben oder nuucp-Accounts auf
dnl Ihrem System haben, koennen Sie diese Verzeichnisse auch fuer ZCONNECT
dnl File-Requests zur Verfuegung stellen.
dnl
dnl EOF
dnl
dnl         FILESERVER=nein
dnl         QUERY="Moechten Sie den ZCONNECT File-Server installieren"; janein
dnl         if [ $ERG = j ]; then
dnl                 FILESERVER=ja
dnl                 echo "Welches Verzeichnis ist das Wurzelverzeichnis des Fileservers?"
dnl                 read FILESDIR
dnl                 echo "Welches Verzeichnis ist das Uploadverzeichnis?"
dnl                 read FILESUPLOAD
dnl         fi

AC_MSG_CHECKING(Dialcode)
AC_ARG_WITH(dialprae,
[ --with-dialprae=code     Wählcode (Default=atdt).],
[ATDT=$withval],[ATDT="ATDT"])
AC_MSG_RESULT($ATDT)
AC_SUBST(ATDT)

AC_MSG_CHECKING(Ortsvorwahl)
AC_ARG_WITH(ortswahl,
[ --with-ortswahl=code     Ortsvorwahl (Default=0).],
[FERNWAHL=$withval],[FERNWAHL="0"])
AC_MSG_RESULT($FERNWAHL)
AC_SUBST(FERNWAHL)

AC_MSG_CHECKING(Auslandsvorwahl)
AC_ARG_WITH(intwahl,
[ --with-intwahl=code      Internationale Vorwahl (Default=00).],
[INTERNATIONAL=$withval],[INTERNATIONAL="00"])
AC_MSG_RESULT($INTERNATIONAL)
AC_SUBST(INTERNATIONAL)




AC_CHECK_FUNCS(syslog)
if test $ac_cv_func_syslog = no; then
       # syslog is not in the default libraries.  See if it's in some other.
       for lib in bsd socket inet; do
               AC_CHECK_LIB($lib, syslog, [AC_DEFINE(HAVE_SYSLOG)
               LIBS="$LIBS $lib"; break])
       done
fi

AC_MSG_CHECKING(Systemname)
AC_ARG_WITH(sys,
[ --with-sys=sys           Systemname.],[
SYS=$withval;],[SYS=`hostname | sed 's/\..*//'`])
AC_MSG_RESULT($SYS)
AC_SUBST(SYS)

AC_MSG_CHECKING(Domainname)
AC_ARG_WITH(domain,
[ --with-domain=domain     Domainname.],[
DOMAIN=$withval;],[DOMAIN=`hostname | sed 's/^[[^\.]]*\.//'`])
AC_MSG_RESULT($DOMAIN)
AC_SUBST(DOMAIN)

FQDN=$SYS.$DOMAIN
AC_SUBST(FQDN)

AC_CHECK_PROGS(INEWS,inews,/usr/lib/news/inews,/usr/lib/news /usr/local/lib/news /usr/news /usr/local/news)

AC_PROG_CC

AC_MSG_CHECKING(Various system-dependent things)
        SYSUNAME="`uname -s | tr 'A-Z' 'a-z'`"

        if test "$SYSUNAME" = "$HOST" ; then
                cat <<EOF
Ah, der beruechtigte AT&T 'uname' Bug...
Ist dieses System

  1) System V R4 oder hoeher
  2) Interactive Unix 3.2
  3) SCO Unix
  4) ein anderes System V vor R4.0

EOF
                while : ; do
                        readchar
                        case "$ERG" in
                         1) SYSUNAME=svr4;      break;;
                         2) SYSUNAME=isc;       break;;
                         3) SYSUNAME=sco;       break;;
                         4) SYSUNAME=sysv;      break;;
                        esac
                done
        fi

        case "$SYSUNAME" in
                freebsd)
                        echo "Konfiguriere fuer FreeBSD..."
                        SYSTYPE=freebsd
                       CFLAGS="$CFLAGS -O2 -pipe -Wall"
                ;;
                netbsd)
                        echo "Konfiguriere fuer NetBSD..."
                        SYSTYPE=netbsd
                       CFLAGS="$CFLAGS -O2 -pipe -Wall"
                ;;
                linux)
                        echo "Konfiguriere fuer Linux..."
                        SYSTYPE=linux
                       CFLAGS="$CFLAGS -Wall"
                       PATHADD=$PATHADD:/usr/lib/news/bin:/usr/local/lib/news/bin
                ;;
                bsd/386)
                        echo "Konfiguriere fuer BSDI BSD/386..."
                        SYSTYPE=bsdi
                       CFLAGS="$CFLAGS -O2 -pipe -Wall"
                ;;
                svr4)
                        SYSTYPE=svr4
                       CFLAGS="$CFLAGS -O"
                ;;
                sco*)
                        echo "Konfiguriere fuer SCO UNIX..."
                        SYSTYPE=sco
                       LDFLAGS="$LDFLAGS -lPW"
                ;;
                isc*)
                        echo "Konfiguriere fuer Interactive UNIX..."
                        SYSTYPE=isc
                       LDFLAGS="$LDFLAGS -cposix -lPW"
                ;;
                unix)
                        echo "Konfiguriere fuer System V..."
                        SYSTYPE=sysv
                       LDFLAGS="$LDFLAGS -lPW"
                ;;
                sunos)
                        echo "Konfiguriere fuer SunOS..."
                        echo "(ohne gcc sehe ich allerdings offen gesagt schwarz!)"
                        SYSTYPE=sunos
                       CFLAGS="$CFLAGS -O"
                        ;;
                *)
                        echo "Diesen Systemtyp kenne ich nicht, mal sehen ob POSIX"
                        echo "klappt..."
                        SYSTYPE=svr4
                       CFLAGS="$CFLAGS -O"
                        ;;
        esac
        CPPFLAGS="$CPPFLAGS -I../include"


if test -f include/os-linux/policy.h; then
	# neue Config
	if test -f include/sysdep.h; then
	    rm -f include/sysdep.h
	fi

	if test -f include/os-$SYSTYPE/sysdep.h; then
	    echo "Linke include/os-$SYSTYPE/sysdep.h nach include/sysdep.h..."
	    cp -i include/os-$SYSTYPE/sysdep.h include/sysdep.h
	else
	    echo "Unbekanntes System, verwende include/os-linux/sysdep.h"
	    cp -i include/os-linux/sysdep.h include/sysdep.h
	fi

	if test -f include/policy.h; then
	    rm -f include/policy.h
	fi
	if test -f include/os-$SYSTYPE/policy.h; then
	    echo "Linke include/os-$SYSTYPE/policy.h nach include/policy.h..."
	    cp -i include/os-$SYSTYPE/policy.h include/policy.h
	else
	    echo "Unbekanntes System, verwende include/os-linux/policy.h"
	    cp -i include/os-linux/policy.h include/policy.h
	fi

else
	# alte Config

	if test -f include/sysdep.h; then
	        rm -f include/sysdep.h
	fi
	if ln -s `pwd`/include/systems/$SYSTYPE.h include/sysdep.h 2>/dev/null;	then
	        :
	else
        	ln include/systems/$SYSTYPE.h include/sysdep.h
	fi

	if test -f include/policy.h.$SYSTYPE; then
	        echo "Erzeuge include/policy.h..."
	        cp include/policy.h.$SYSTYPE include/policy.h
	else
	        echo "Fuer dieses System ist kein include/policy.h bekannt."
	        echo "Sie muessen es unbedingt von Hand editieren!"
	        echo ""
	fi
fi

AC_MSG_RESULT(fertig)
AC_SUBST(SYSTYPE)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(PATHADD)

AC_PROG_RANLIB

AC_CHECK_PROGS(shell,sh,/bin/sh)
dnl AC_MSG_RESULT($shell)

dnl AC_OUTPUT(etc/config.in include/config.h Makefile Makefile.global tools/Makefile hdlib/Makefile date/Makefile online/Makefile lib/Makefile shell/Makefile gate/Makefile etc/Makefile)

AC_OUTPUT(Makefile Makefile.global helpers/subst)

dnl AC_OUTPUT(etc/config.in Makefile Makefile.global helpers/subst)
