dnl Process this file with autoconf to produce a configure script.
dnl (c) 1999 Andreas Barth <aba@muenchen.pro-bahn.de>
dnl (c) 1999 Matthias Andree <ma@dt.e-technik.uni-dortmund.de>
dnl (c) 1999 Dirk Meyer <dirk.meyer@dinoex.sub.org>

dnl gehört zum Packet unix-connect
dnl und unterliegt der GPL (siehe COPYING)

AC_INIT(mail-and-news)
dnl AC_CONFIG_HEADER(include/config.h)
dnl AC_DEFINE_UNQUOTED(CONFIG_FILE,$sysconfdir)

dnl      checks for programs
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_CC
AC_PROG_RANLIB

dnl      checks for libraries
dnl Replace `main' with a function in -lreadline:
dnl AC_CHECK_LIB(readline, main)
dnl Replace `main' with a function in -ltermcap:
dnl AC_CHECK_LIB(termcap, main)

dnl      checks for header files
dnl AC_HEADER_STDC
dnl AC_HEADER_MAJOR
dnl AC_CHECK_HEADERS(fcntl.h paths.h sgtty.h sys/file.h sys/ioctl.h syslog.h termio.h)

AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_CHECK_HEADERS(string.h unistd.h limits.h sys/fcntl.h)
if eval "test \"`echo '$ac_cv_header_string_h'`\" = no"; then
  AC_CHECK_HEADERS(strings.h)
fi
if eval "test \"`echo '$ac_cv_header_limits_h'`\" = no"; then
  AC_CHECK_HEADERS(values.h)
fi
AC_CHECK_HEADERS(stdarg.h varargs.h sys/mkdev.h sys/sysmacros.h)

dnl      checks for typedefs, structures and compiler characteristics
dnl AC_C_CONST
dnl AC_C_INLINE
dnl AC_TYPE_OFF_T
dnl AC_TYPE_PID_T
dnl AC_TYPE_SIZE_T
dnl AC_STRUCT_ST_RDEV
dnl AC_STRUCT_TM
dnl AC_STRUCT_TIMEZONE

dnl      checks for library functions
dnl AC_PROG_GCC_TRADITIONAL
dnl AC_FUNC_MEMCMP
dnl AC_FUNC_SETPGRP
dnl AC_FUNC_SETVBUF_REVERSED
dnl AC_TYPE_SIGNAL
dnl AC_FUNC_STRFTIME
dnl AC_FUNC_VPRINTF
dnl AC_CHECK_FUNCS(getcwd getwd mkdir mktime rmdir strcspn strdup strerror strstr strtol)
AC_CHECK_FUNCS(asprintf)
AC_REPLACE_FUNCS(strdup stccpy snprintf vsnprintf)

dnl      checks for system services


AC_MSG_CHECKING(Path)
AC_ARG_WITH(path,
[ --with-path=path         Path innerhalb von UC (Default=PATH).],
[path=$withval],[path=$PATH])
AC_MSG_RESULT($path)
AC_SUBST(path)

AC_MSG_CHECKING(Unterverzeichnis für die Dateien)
AC_ARG_WITH(dir,
[ --with-dir=dir           In welches Unterverzeichnis die Dateien kommen.],
[ ZCDIR="$withval"
if test x"$ZCDIR" != x; then
  ZC="/$ZCDIR";
fi
],[
ZCDIR=zconnect
if test x"$ZCDIR" != x; then
  ZC="/$ZCDIR";
fi
]
)
AC_MSG_RESULT($ZCDIR)
AC_SUBST(ZC)


AC_MSG_CHECKING(Unterverzeichnis für die Programme)
AC_ARG_WITH(execdir,
[ --with-execdir=dir       In welches Verzeichnis die Programme kommen.],
[ BINDIR="$withval"
],[
       BINDIR="$libexecdir$ZC"
])
AC_MSG_RESULT($BINDIR)
AC_SUBST(BINDIR)

AC_MSG_CHECKING(Unterverzeichnis für die Konfiguration)
AC_ARG_WITH(confdir,
[ --with-confdir=dir       In welches Verzeichnis die Konfiguration kommt.],
[ ETCDIR="$withval"
],[
       ETCDIR="$sysconfdir$ZC"
])
AC_MSG_RESULT($ETCDIR)
AC_SUBST(ETCDIR)


AC_MSG_CHECKING(spooldir)
AC_ARG_WITH(spooldir,
[ --with-spooldir=dir      Spooldir.],
[ SPOOLDIR="$withval" ],[
if test -d /var/spool; then
  SPOOLDIR=/var/spool/zconnect
else
  SPOOLDIR=/usr/spool/zconnect
fi
]
)
AC_MSG_RESULT($SPOOLDIR)
AC_SUBST(SPOOLDIR)

AC_MSG_CHECKING(Benutzerkennung für Unix-Connect)
AC_ARG_WITH(user,
[ --with-user=user         Benutzerkennung für Unix-Connect.],[
if test -f /etc/passwd ; then
  if ! grep "^$withval:" /etc/passwd >/dev/null ; then
    echo
    echo "Es muß eine gültige Benutzerkennung gewählt werden"
    exit 1;
  else
    echo $withval
    USER=$withval;
  fi
else
  echo $withval
  USER=$withval;
fi],
[ echo
  echo "Es muß eine gültige Benutzerkennung gewählt werden"
  exit 1]
)
AC_SUBST(USER)

AC_MSG_CHECKING(Gruppenkennung für Unix-Connect)
AC_ARG_WITH(group,
[ --with-group=group       Gruppenkennung für Unix-Connect.],[
if test -f /etc/group ; then
  if ! grep "^$withval:" /etc/group >/dev/null ; then
    echo
    echo "Es muß eine gültige Gruppe gewählt werden"
    exit 1;
  else
    echo $withval
    GROUP=$withval;
  fi
else
  echo $withval
  GROUP=$withval;
fi],
[ echo
  echo "Es muß eine gültige Gruppe gewählt werden"
  exit 1]
)
AC_SUBST(GROUP)

AC_MSG_CHECKING(Welcher Typ ist das Gateway)
AC_ARG_WITH(box,
[ --with-box=typ           point, gate, server
                          Point:  Unix-Connect ist Enduser-System
                          Gate:   Kein Teil des Z-Netzes
                          Server: Alles ist möglich (default).],
[ case "$withval" in
  server)
        AC_MSG_RESULT(Box)
        INSTTYPE="box"
        ;;
  point)
        AC_MSG_RESULT(Point)
        INSTTYPE="point"
        ;;
  gate)
        AC_MSG_RESULT(Gate)
        INSTTYPE="gate"
        ;;
  *)
        AC_MSG_RESULT(Fehler!)
        exit 1
        ;;
  esac ],[
  AC_MSG_RESULT(box)
  INSTTYPE="box"]
)
AC_SUBST(INSTTYPE)


dnl Mail- und Newssystem
dnl in den zweiten Teil sollen mal Heuristiken eingebaut werden
AC_MSG_CHECKING(Mailsystem)
AC_ARG_WITH(mail,
[ --with-mail=typ          Welches Mailsystem wird verwendet?],
[
if test -f "mail-and-news/$withval/RSMTP" ; then
  	MAIL=$withval
else
  if test -f "mail-and-news/$withval/RSMTP.in" ; then
  	MAIL=$withval
  else
  	echo "es gibt kein Mailsystem \"$withval\"."
        AC_MSG_RESULT(Fehler!)
        exit 1
  fi
fi
], [MAIL='no'])
AC_MSG_RESULT($MAIL)
AC_SUBST(MAIL)


AC_MSG_CHECKING(Newssystem)
AC_ARG_WITH(news,
[ --with-news=typ          Welches Newssystem wird verwendet?],
[
if test -d "mail-and-news/$withval" ; then
  	NEWS=$withval
else
  	echo "es gibt kein Newssystem \"$withval\"."
        AC_MSG_RESULT(Fehler!)
        exit 1
fi
], [NEWS='no'])
AC_MSG_RESULT($NEWS)
AC_SUBST(NEWS)


AC_MSG_CHECKING(APC einkompilieren)
AC_ARG_ENABLE(apc,
[ --with-apc               APC einkompilieren (meist unnötig).],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(APC_A2B)
        APCOBJS="apc_a2b.o atob.o"
        ;;
  *)
        AC_MSG_RESULT(Nein)
        APCOBJS=""
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
  APCOBJS=""
])
AC_SUBST(APCOBJS)


AC_MSG_CHECKING(Nachrichten zurückkonvertieren verbieten)
AC_ARG_ENABLE(full-gate,
[ --disable-full-gate      Nachrichten zurückkonvertieren verbieten.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_FULL_GATE)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Fehler nicht in X-Header protokollieren)
AC_ARG_ENABLE(log-xheader,
[ --disable-log-xheader    Fehler nicht in X-Header protokollieren.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_LOG_X_HEADER)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Nicht alle Header erzeugen)
AC_ARG_ENABLE(uucp-server,
[ --disable-uucp-server    Nicht alle Header erzeugen, für reine Leafsites.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_UUCP_SERVER)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Umlaute in Mail mit us-ascii umschreiben)
AC_ARG_ENABLE(iso-in-mail,
[ --disable-iso-in-mail    Umlaute in Mail mit us-ascii umschreiben.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_ISO_IN_MAIL)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Umlaute in News mit us-ascii umschreiben)
AC_ARG_ENABLE(iso-in-news,
[ --disable-iso-in-news    Umlaute in News mit us-ascii umschreiben.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_ISO_IN_NEWS)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Sonderbehandlung des ROT-Headers für MAPS)
AC_ARG_ENABLE(rot-for-maps,
[ --disable-rot-for-maps   Sonderbehandlung des ROT-Headers für MAPS.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_ROT_FOR_MAPS)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Sonderbehandlung für Usernamen im ROT-Header)
AC_ARG_ENABLE(nouser-in-rot,
[ --disable-nouser-in-rot  Sonderbehandlung für Usernamen im ROT-Header.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_NOUSER_IN_ROT)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Checksummer der Seriennummer unterdrücken)
AC_ARG_ENABLE(janus-checksum,
[ --disable-janus-checksum Checksummer der Seriennummer unterdrücken.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DISABLE_JANUS_CHECKSUM)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


EXTRA_CDIR="rsmtp"
AC_MSG_CHECKING(Batched SMTP lesen und Schreiben)
AC_ARG_ENABLE(rsmtp,
[ --disable-rsmtp          Eigene Programme für Batched SMTP.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Nein)
	EXTRA_CDIR=""
        AC_DEFINE(DISABLE_RSMTP)
        ;;
  *)
        AC_MSG_RESULT(Ja)
        ;;
  esac ],[
  AC_MSG_RESULT(Ja)]
)
AC_SUBST(EXTRA_CDIR)


ONLINE_LIB="gatelib.a"
ONLINE_DIR="online tools"
SHELL_DIR="shell"
AC_MSG_CHECKING(Onlinefunktionen für Janus und ZConnect)
AC_ARG_ENABLE(online,
[ --disable-online         Onlinefunktionen für Janus und ZConnect.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Nein)
	ONLINE_LIB=""
	ONLINE_DIR=""
	SHELL_DIR=""
        AC_DEFINE(DISABLE_ONLINE)
        ;;
  *)
        AC_MSG_RESULT(Ja)
        ;;
  esac ],[
  AC_MSG_RESULT(Ja)]
)
AC_SUBST(ONLINE_LIB)
AC_SUBST(ONLINE_DIR)
AC_SUBST(SHELL_DIR)



AC_MSG_CHECKING(Bang-Pfade)
AC_ARG_ENABLE(bang,
[ --enable-bang            Bang-Pfade verwenden.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_RCPT_WITH_BANG)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Erzeuge U-X-Header)
AC_ARG_ENABLE(uxheader,
[ --enable-uxheader        Erzeuge U-X-Header, veraltet.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_U_X_HEADER)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Ignoriere defekte Header)
AC_ARG_ENABLE(badheader,
[ --enable-badheader       Ignoriere defekte Header.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_IGNORE_BAD_HEADERS)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Ignoriere ZModem Fehler)
AC_ARG_ENABLE(zmodemhack,
[ --enable-zmodemhack      Ignoriere ZModem Fehler (gefährlich).],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(DIRTY_ZMODEM_HACK)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Erzeuge ISO-Charset in ZConnect)
AC_ARG_ENABLE(iso-in-zconnect,
[ --enable-iso-in-zconnect Erzeuge ISO-Charset in ZConnect.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_ISO_IN_ZCONNCT)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Erzeuge Message-IDs für Points.)
AC_ARG_ENABLE(point-messageid,
[ --enable-point-messageid Erzeuge Message-IDs für Points.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_POINT_MESSAGE_ID)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Erzeuge Prüfsummen mit uuencode)
AC_ARG_ENABLE(uuencode-chksum,
[ --enable-uuencode-chksum Erzeuge Prüfsummen mit uuencode.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_UUENCODE_CHKSUM)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Verwende kurze Namen für Verzeichnisse)
AC_ARG_ENABLE(short-spooldir,
[ --enable-short-spooldir  Verwende kurze Namen für Verzeichnisse.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_SPOOLDIR_SHORTNAME)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Lege eine Pause für langsame Modems ein.)
AC_ARG_ENABLE(slow-modem,
[ --enable-slow-modem      Lege eine Pause für langsame Modems ein.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(SLOW_MODEM)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Erzeuge Spoolverzeichisse im Betrieb)
AC_ARG_ENABLE(auto-create,
[ --enable-auto-create     Erzeuge Spoolverzeichisse im Betrieb.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_AUTO_CREATE)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Fälsche das Subject wenn es leer ist)
AC_ARG_ENABLE(online,
[ --enable-noempty-subject Fälsche das Subject wenn es leer ist.],
[ case "$enableval" in
  no)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_NOEMPTY_SUBJECT)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)]
)


AC_MSG_CHECKING(Berechne Zeit in Bruchteilen)
AC_ARG_ENABLE(difftime,
[ --enable-difftime        Berechne Zeit in Bruchteilen.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_DIFFTIME)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Verwende Großschreibung im Passwort)
AC_ARG_ENABLE(caps-in-passwd,
[ --enable-caps-in-passwd  Verwende Großschreibung im Passwort.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_CAPS_IN_PASSWORD)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


AC_MSG_CHECKING(Verwende neuen Onlinecode)
AC_ARG_ENABLE(testing,
[ --enable-testing         Verwende neuen Onlinecode.],
[ case "$enableval" in
  yes)
        AC_MSG_RESULT(Ja)
        AC_DEFINE(ENABLE_TESTING)
        ;;
  *)
        AC_MSG_RESULT(Nein)
        ;;
  esac ],[
  AC_MSG_RESULT(Nein)
])


dnl AC_MSG_CHECKING(Fileserver)
dnl AC_ARG_WITH(fileserver,
dnl [ --with-fileserver=dir      Fileserverdir.],
dnl [
dnl Wenn Sie einen anonymous-FTP Server betreiben oder nuucp-Accounts auf
dnl Ihrem System haben, koennen Sie diese Verzeichnisse auch fuer ZCONNECT
dnl File-Requests zur Verfuegung stellen.
dnl
dnl EOF
dnl
dnl         FILESERVER=nein
dnl         QUERY="Moechten Sie den ZCONNECT File-Server installieren"; janein
dnl         if [ $ERG = j ]; then
dnl                 FILESERVER=ja
dnl                 echo "Welches Verzeichnis ist das Wurzelverzeichnis des Fileservers?"
dnl                 read FILESDIR
dnl                 echo "Welches Verzeichnis ist das Uploadverzeichnis?"
dnl                 read FILESUPLOAD
dnl         fi

AC_MSG_CHECKING(Dialcode)
AC_ARG_WITH(dialprae,
[ --with-dialprae=code     Wählcode (Default=ATDT).],
[ATDT=$withval],[ATDT="ATDT"])
AC_MSG_RESULT($ATDT)
AC_SUBST(ATDT)

AC_MSG_CHECKING(Ortsvorwahl)
AC_ARG_WITH(ortswahl,
[ --with-ortswahl=code     Ortsvorwahl (Default=0).],
[FERNWAHL=$withval],[FERNWAHL="0"])
AC_MSG_RESULT($FERNWAHL)
AC_SUBST(FERNWAHL)

AC_MSG_CHECKING(Auslandsvorwahl)
AC_ARG_WITH(intwahl,
[ --with-intwahl=code      Internationale Vorwahl (Default=00).],
[INTERNATIONAL=$withval],[INTERNATIONAL="00"])
AC_MSG_RESULT($INTERNATIONAL)
AC_SUBST(INTERNATIONAL)




AC_CHECK_FUNCS(syslog)
if test $ac_cv_func_syslog = no; then
  # syslog is not in the default libraries.  See if it's in some other.
  for lib in bsd socket inet; do
    AC_CHECK_LIB($lib, syslog, [AC_DEFINE(HAVE_SYSLOG)
    LIBS="$LIBS $lib"; break])
  done
fi

AC_MSG_CHECKING(Systemname)
AC_ARG_WITH(sys,
[ --with-sys=sys           Systemname.],[
SYS=$withval;],[SYS=`hostname | sed 's/\..*//'`])
AC_MSG_RESULT($SYS)
AC_SUBST(SYS)

AC_MSG_CHECKING(Domainname)
AC_ARG_WITH(domain,
[ --with-domain=domain     Domainname.],[
DOMAIN=$withval;],[
if hostname | grep '\.' >/dev/null ; then
  DOMAIN=`hostname | sed 's/^[[^\.]]*\.//'`
else
  if hostname -f | grep '\.' >/dev/null ; then
    DOMAIN=`hostname -f | sed 's/^[[^\.]]*\.//'`
  else
    echo "Kann Domainnamen nicht ermitteln."
    echo "Bitte mit --with-domain angeben."
    AC_MSG_RESULT(Fehler!)
    exit 1
  fi
fi
])
AC_MSG_RESULT($DOMAIN)
AC_SUBST(DOMAIN)

FQDN=$SYS.$DOMAIN
AC_SUBST(FQDN)

AC_PATH_PROGS(INEWS,inews,inews,/usr/local/bin:/usr/bin:/usr/lib/news:/usr/local/lib/news:/usr/news:/usr/local/news:/usr/lib/news/bin)
if test ! -x "$INEWS" ; then
  echo "Kann inews nicht finden. uumlist wird nicht funktionieren."
fi

AC_ARG_WITH(sendmail,
[ --with-sendmail=file     Sendmail-Programm.],[
SENDMAIL=$withval
if test x$SENDMAIL = xno ; then
  echo "Unix/Connect braucht Sendmail."
  exit 1
fi
])

AC_PATH_PROGS(SENDMAIL,sendmail,/usr/sbin/sendmail,$PATH:/usr/sbin:/usr/lib)
if test ! -x "$SENDMAIL" ; then
  echo "Kann sendmail nicht finden. Bitte mit --with-sendmail einen sendmail-"
  echo "kompatibles Programm angeben. Es muß die Option -t akzeptieren."
  exit 1
fi

if ! test "$ONLINE_DIR" = "" ; then
  dnl AC_MSG_CHECKING(Transferprogramme)

  AC_ARG_WITH(zmodem,
  [ --with-zmodem=file       Z/Y/X-Modem-Sendebefehl.],[
    LSZMODEM=$withval
  ])
  AC_PATH_PROGS(LSZMODEM,lsz sz,/usr/local/bin/lsz,$PATH:/usr/local/bin:/usr/bin)
  LRZMODEM=`echo "$LSZMODEM" | sed -e 's/sz$/rz/'`
  if test ! -x "$LSZMODEM" -o ! -x "$LRZMODEM" ; then
    cat << EOF

Kann ZMODEM-Transferprogramme nicht finden. Bitte mit --with-zmodem den
Pfad zum ZModem-Transferprogramm angeben. Es wird vorausgesetzt, dass
sich der Name des Empfaengers durch Ersatz von sz durch rz erzeugen laesst.

EOF
    exit 1
  fi
  AC_SUBST(LRZMODEM)

  AC_MSG_CHECKING(ob wir ein Omen Technology INC Zmodem haben)
  if $LSZMODEM 2>&1 -h | grep -q -e 'Omen Technology' \
  || $LRZMODEM 2>&1 -h | grep -q -e 'Omen Technology' ; then
    cat <<EOF

Die Transferprogramme von Omen Technology werden nicht
unterstuetzt. Gruende dafuer liegen u. a. in extrem restriktiven
Lizenzbedingungen und Ausspaehung von Daten durch unaufgefordert
verschickte Mails mit Transferprotokollen.

Bitte benutzen Sie stattdessen das freie lrzsz.

EOF
    exit 1
  fi
  AC_MSG_RESULT([gut, ist es nicht.])

  AC_MSG_CHECKING([ob unser ZModem auch als Y- oder XModem taugt])
  changequote(98,99)
  if test x`$LSZMODEM -h 2>&1 | grep -c -e '--[xy]modem'` != x2 \
       -o x`$LRZ -h 2>&1 | grep -c -e '--[xy]modem'` != x2 ; then
    cat <<EOF

Warnung, das vorhandene ZModem sollte die Optionen
  --xmodem und --ymodem akzeptieren.
oder Sie müssen die Konfiguratuonsdatei xprogs ändern.

EOF
  changequote([, ])dnl
  fi
  AC_MSG_RESULT([scheint so])

  AC_PATH_PROGS(LSBMODEM,lsb sb,/usr/local/bin/lsb,$PATH:/usr/local/bin:/usr/bin)
  LRBMODEM=`echo "$LSBMODEM" | sed -e 's/sb$/rb/'`
  if test ! -x "$LSBMODEM" -o ! -x "$LRBMODEM" ; then
    cat << EOF

Warnung, Kann lsb,sb/lrb,rb nicht finden. Bitte \$LSBMODEM auf den Pfad setzen,
oder in der Konfiguratuonsdatei xprogs ändern.

EOF
  fi
  AC_SUBST(LRBMODEM)

  AC_PATH_PROGS(LSXMODEM,lsx sx,/usr/local/bin/lsb,$PATH:/usr/local/bin:/usr/bin)
  LRXMODEM=`echo "$LSXMODEM" | sed -e 's/sx$/rx/'`
  if test ! -x "$LSXMODEM" -o ! -x "$LRXMODEM" ; then
    cat << EOF

Warnung, Kann lsx,sx/lrx,rx nicht finden. Bitte \$LRXMODEM auf den Pfad setzen,
oder in der Konfiguratuonsdatei xprogs ändern.

EOF
  fi
  AC_SUBST(LRXMODEM)

  AC_ARG_WITH(kermit,
  [ --with-kermit=file       Kermit-Befehl.],[
  KERMIT=$withval])
  if test x"$KERMIT" != xno ; then
    AC_PATH_PROGS(KERMIT,gkermit kermit,/usr/local/bin/gkermit,$PATH:/usr/local/bin:/usr/bin)
  fi
fi

if test "$NEWS" = "inn" ; then
   dnl das folgende muß in der ersten Spalte beginnen, sonst wird es von
   dnl makesubst nicht gefunden
AC_PATH_PROGS(INNSHELLVARS,innshellvars,innshellvars,/usr/local/bin:/usr/bin:/usr/lib/news:/usr/local/lib/news:/usr/news:/usr/local/news:/usr/lib/news/lib)
    if test ! -f "$INNSHELLVARS" ; then
	echo "Kann innshellvars nicht finden. send-zcon wird nicht funktionieren."
    fi
fi

AC_MSG_CHECKING(various system-dependent things)
SYSUNAME="`uname -s | tr 'A-Z' 'a-z'`"

if test "$SYSUNAME" = "$HOST" ; then
  cat <<EOF
Ah, der beruechtigte AT&T 'uname' Bug...
Ist dieses System

  1) System V R4 oder hoeher
  2) Interactive Unix 3.2
  3) SCO Unix
  4) ein anderes System V vor R4.0

EOF
  while : ; do
    readchar
    case "$ERG" in
    1) SYSUNAME=svr4;      break;;
    2) SYSUNAME=isc;       break;;
    3) SYSUNAME=sco;       break;;
    4) SYSUNAME=sysv;      break;;
    esac
  done
fi

case "$SYSUNAME" in
freebsd)
  echo "Konfiguriere fuer FreeBSD..."
  SYSTYPE=freebsd
  CFLAGS="$CFLAGS -pipe -Wall"
  ;;
netbsd)
  echo "Konfiguriere fuer NetBSD..."
  SYSTYPE=netbsd
  CFLAGS="$CFLAGS -pipe -Wall"
  ;;
linux)
  echo "Konfiguriere fuer Linux..."
  SYSTYPE=linux
  CFLAGS="$CFLAGS -pipe -Wall"
  PATHADD=$PATHADD:/usr/lib/news/bin:/usr/local/lib/news/bin
  ;;
bsd/386)
  echo "Konfiguriere fuer BSDI BSD/386..."
  SYSTYPE=bsdi
  CFLAGS="$CFLAGS -pipe -Wall"
  ;;
svr4)
  SYSTYPE=svr4
  CFLAGS="$CFLAGS -O"
  ;;
sco*)
  echo "Konfiguriere fuer SCO UNIX..."
  SYSTYPE=sco
  LDFLAGS="$LDFLAGS -lPW"
  ;;
isc*)
  echo "Konfiguriere fuer Interactive UNIX..."
  SYSTYPE=isc
  LDFLAGS="$LDFLAGS -cposix -lPW"
  ;;
unix)
  echo "Konfiguriere fuer System V..."
  SYSTYPE=sysv
  LDFLAGS="$LDFLAGS -lPW"
  ;;
sunos)
  echo "Konfiguriere fuer SunOS..."
  echo "(ohne gcc sehe ich allerdings, offen gesagt, schwarz!)"
  SYSTYPE=sunos
  CFLAGS="$CFLAGS -O"
  ;;
*)
  echo "Diesen Systemtyp kenne ich nicht, mal sehen ob POSIX"
  echo "klappt..."
  SYSTYPE=svr4
  CFLAGS="$CFLAGS -O"
  ;;
esac
CPPFLAGS="$CPPFLAGS -I../include -I../hdlib"

dnl	paranoid ....
gcc_warn="
-W
-Wall
-Waggregate-return
-Wbad-function-cast
-Wcast-align
-Wcast-qual
-Wchar-subscripts
-Wcomment
-Wconversion
-Wenum-clash
-Wformat
-Wid-clash-30
-Wimplicit
-Wimplicit-function-delcaration
-Wimplicit-int
-Winline
-Wlong-long
-Wmain
-Wmissing-declarations
-Wmissing-prototypes
-Wnested-externs
-Wno-import
-Wno-parentheses
-Wparentheses
-Wpointer-arith
-Wredundant-decls
-Wreturn-type
-Wshadow
-Wsign-compare
-Wstrict-prototypes
-Wswitch
-Wtraditional
-Wtrigraphs
-Wuninitialized
-Wunused
-Wwrite-strings
-pedantic
"

if test $SYSTYPE = linux; then
  echo "Nachsicht für gcc eigene Stringfunktionen"
  gcc_warn=`echo $gcc_warn|sed -e 's/-Wconversion//'`
fi

gcc_warn_ok=""
if test $ac_cv_prog_gcc = yes; then
  for i in $gcc_warn
  do
    echo $ac_n "checking whether ${CC-cc} accepts $i""... $ac_c" 1>&6
    echo 'void f(){}' > conftest.c
    if test -z "`${CC-cc} ${CFLAGS} $i -c conftest.c 2>&1`"; then
      gcc_warn_ok="$gcc_warn_ok $i"
      echo "yes"
    else
      echo "no"
    fi
    rm -fr conftest*
  done
fi
echo "$gcc_warn_ok"
if test "$GCC" = yes; then
  CFLAGS="$CFLAGS $gcc_warn_ok"
fi


# neue Config
if test -f include/sysdep.h; then
  rm -f include/sysdep.h
fi

if test -f include/os-$SYSTYPE/sysdep.h; then
  echo "Linke include/os-$SYSTYPE/sysdep.h nach include/sysdep.h..."
  cp -i include/os-$SYSTYPE/sysdep.h include/sysdep.h
else
  echo "Unbekanntes System, verwende include/os-linux/sysdep.h"
  cp -i include/os-linux/sysdep.h include/sysdep.h
fi

if test -f include/policy.h; then
  rm -f include/policy.h
fi
if test -f include/os-$SYSTYPE/policy.h; then
  echo "Linke include/os-$SYSTYPE/policy.h nach include/policy.h..."
  cp -i include/os-$SYSTYPE/policy.h include/policy.h
else
  echo "Unbekanntes System, verwende include/os-linux/policy.h"
  cp -i include/os-linux/policy.h include/policy.h
fi

dnl AC_MSG_RESULT(fertig)
AC_SUBST(SYSTYPE)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(PATHADD)
AC_SUBST(LIBOBJS)


AC_CHECK_PROGS(shell,sh,/bin/sh)
dnl AC_MSG_RESULT($shell)

dnl AC_OUTPUT(etc/config.in include/config.h Makefile Makefile.global tools/Makefile hdlib/Makefile date/Makefile online/Makefile lib/Makefile shell/Makefile gate/Makefile etc/Makefile)

AC_OUTPUT(Makefile Makefile.global helpers/subst)

dnl AC_OUTPUT(etc/config.in Makefile Makefile.global helpers/subst)

AC_MSG_RESULT([
*** Konfiguration abgeschlossen.
*** Geben Sie \`make' ein, um Unix-Connect zu compilieren.
])
